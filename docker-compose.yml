version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eduflow-postgres
    environment:
      POSTGRES_DB: eduflow
      POSTGRES_USER: eduflow_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-eduflow_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - eduflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eduflow_user -d eduflow"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: eduflow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eduflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eduflow-app
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://eduflow_user:${POSTGRES_PASSWORD:-eduflow_password}@postgres:5432/eduflow
      REDIS_URL: redis://redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SESSION_SECRET: ${SESSION_SECRET:-your-super-secret-session-key}
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - eduflow-network
    restart: unless-stopped
    volumes:
      - uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: eduflow-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - eduflow-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads:
    driver: local

networks:
  eduflow-network:
    driver: bridge

# For development override
---
# docker-compose.dev.yml
version: '3.8'

services:
  # Development database
  postgres:
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: eduflow_dev
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password

  # Development app with hot reload
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://dev_user:dev_password@postgres:5432/eduflow_dev
      VITE_HMR_PORT: 5173
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "5000:5000"
      - "5173:5173"
    command: npm run dev

  # Remove nginx for development
  nginx:
    profiles:
      - production